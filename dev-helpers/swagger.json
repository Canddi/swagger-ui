{
    "swagger": "2.0",
    "info": {
        "title": "CANDDi API",
        "contact": {
            "email": "hello@canddi.com"
        },
        "version": "1.0.0"
    },
    "host": "developer.canddi.com",
    "paths": {
        "/activity/{SessionGoalId}/decode": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Decodes the PostArray for a given Session Goal",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/activity_param_session-goal-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Post": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "Key": {
                                                "description": "Key of the field in the post body",
                                                "type": "string"
                                            },
                                            "Value": {
                                                "description": "Value of the field in the post body",
                                                "type": "string"
                                            },
                                            "Lookup": {
                                                "description": "Processed value of the field in the post body",
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "Query": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "Key": {
                                                "description": "Key of the query string parameter",
                                                "type": "string"
                                            },
                                            "Value": {
                                                "description": "Value of the query string parameter",
                                                "type": "string"
                                            },
                                            "Lookup": {
                                                "description": "Processed value of the query string parameter",
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "SessionGoal can't be empty"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/activity": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Outputs all the Session Goals for this account (sorted by Time)",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Activities": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Activity"
                                    }
                                },
                                "TotalRows": {
                                    "description": "Number of items that match the filters",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/activity/get/filtertypes": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Provides the categories for Filtering",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Actions": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "Icon": {
                                                "description": "The FA icon",
                                                "type": "string"
                                            },
                                            "Name": {
                                                "type": "string"
                                            },
                                            "Title": {
                                                "type": "string"
                                            },
                                            "Type": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "PageTypes": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "Name": {
                                                "type": "string"
                                            },
                                            "PageType": {
                                                "description": "Can also be a string of \"*\" ",
                                                "type": "integer"
                                            },
                                            "SessionType": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/contact/{ContactId}/activity": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Gets activities from a contact",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/contact_param_contact-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Activities": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Activity"
                                    }
                                },
                                "Sessions": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "Actions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "SessionGUID": {
                                                "type": "string"
                                            },
                                            "SessionType": {
                                                "properties": {
                                                    "Id": {
                                                        "type": "integer"
                                                    },
                                                    "Type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "TimeCreated": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "TotalRows": {
                                    "type": "integer"
                                },
                                "CurrentPage": {
                                    "type": "integer"
                                },
                                "PerPage": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "ContactId can't be empty"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/contact/bulk/assigned": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Assigns multiple contacts to a user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Body",
                        "in": "body",
                        "description": "The request body",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ContactIds": {
                                    "description": "The contact IDs to tag",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "tags": {
                                    "description": "Key of tagname, value of 1",
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "description": "Will be just an object if only 1 contact is returned",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contact"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "ContactId can't be empty"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/contact/{ContactId}/child/{ChildType}": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Gets child data, such as the full array of phone numbers, from a contact",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/contact_param_contact-id"
                    },
                    {
                        "$ref": "#/parameters/contact_param_child-type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "description": "An array of child models",
                            "type": "array",
                            "items": {
                                "description": "Could be Telephone, Address, Email, Name or Company models, depending on the child type",
                                "type": "object"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "ContactId & ChildType can't be empty"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Adds child data, such as a phone number, to a contact",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/contact_param_contact-id"
                    },
                    {
                        "name": "ChildType",
                        "in": "path",
                        "description": "A child type, should be one of: addresses, companies, emails, names, phones. assignedto, comments or contacttag",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "description": "The request body",
                        "required": true,
                        "schema": {
                            "description": "Keys of the information for the child model, so Phone for the phone, EmailAddress for AssignedTo, FirstName, LastName & Name for name model etc.",
                            "properties": {
                                "Phone": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "ContactId & ChildType can't be empty"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Removes child data, such as a phone number, from a contact",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/contact_param_contact-id"
                    },
                    {
                        "name": "ChildType",
                        "in": "path",
                        "description": "A child type, should be one of: addresses, companies, emails, names, phones. assignedto, comments or contacttag",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "description": "The request body",
                        "required": true,
                        "schema": {
                            "description": "Child model, example is for a phone",
                            "properties": {
                                "Count": {
                                    "type": "number"
                                },
                                "Phone": {
                                    "type": "string"
                                },
                                "bHidden": {
                                    "type": "boolean"
                                },
                                "bManual": {
                                    "type": "boolean"
                                },
                                "QualityScore": {
                                    "type": "number"
                                },
                                "cwId": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "ContactId & ChildType can't be empty"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/contact/{ContactId}/contactstreams": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Gets details about each Stream that the Contact is in",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/contact_param_contact-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "description": "An array of streams",
                            "type": "array",
                            "items": {
                                "properties": {
                                    "Id": {
                                        "type": "string"
                                    },
                                    "Name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "ContactId can't be empty"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/contact/all/filter/{SearchTerm}": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Searches for a contact based on Email, Name, Company, Phone & IP",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "SearchTerm",
                        "in": "path",
                        "description": "The term to search for",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Number of results to skip",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number to limit the results to",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "precise",
                        "in": "query",
                        "description": "Does a precise search if true, if false or missing does a fuzzy search",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Records": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "ContactId": {
                                                "type": "string"
                                            },
                                            "Relevance": {
                                                "type": "number"
                                            },
                                            "TimeLastSession": {
                                                "type": "integer"
                                            },
                                            "TimeLastSessionGoal": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "Count": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "ContactId & ChildType can't be empty"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/contact/{ContactIds}": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Gets contacts by ID, can also redirect if sent a single ID & an accept header of \"text/html\" ",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/contact_param_contact-ids"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "302": {
                        "description": "Redirects to the contact page on the dashboard"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "ContactId can't be empty"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Performs a manual merge on one or more Contacts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/contact_param_contact-ids"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "ContactId": {
                                    "description": "ID of the merged contact",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "There must be at least 2 Contact IDs"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/contact/{ContactId}/share/email": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Shares a contact",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/contact_param_contact-ids"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "description": "The request body",
                        "required": true,
                        "schema": {
                            "properties": {
                                "Emails": {
                                    "description": "Array of emails to share the contact with",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "Comment": {
                                    "description": "Comment to be sent along to the user the contact was shared with",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "ContactId can't be empty"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/contact/bulk/tag": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Adds the tags to each contact",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Body",
                        "in": "body",
                        "description": "The request body",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ContactIds": {
                                    "description": "The contact IDs to tag",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "tags": {
                                    "description": "Key of tagname, value of 1",
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "description": "will be just an object if the array would only contain one contact",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contact"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Post body must contain ContactIds array & tags object"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/contact/{ContactId}/widget/Leadscore": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Gets the leadscore widget for a contact",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/contact_param_contact-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "properties": {
                                    "ChangeScore": {
                                        "type": "number"
                                    },
                                    "CurrentScore": {
                                        "type": "number"
                                    },
                                    "Reason": {
                                        "type": "string"
                                    },
                                    "SessionGoalId": {
                                        "type": "string"
                                    },
                                    "TimeCreated": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Post body must contain ContactIds array & tags object"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/download/{DownloadId}": {
            "get": {
                "tags": [
                    "Downloads"
                ],
                "summary": "Gets details about a single download",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/download_param_download-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DownloadObject"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Downloads"
                ],
                "summary": "Deletes a single download",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "DownloadId",
                        "in": "path",
                        "description": "A download's id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "DownloadId can't be empty"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/download": {
            "get": {
                "tags": [
                    "Downloads"
                ],
                "summary": "Gets a batch of a user's downloads, by default the 10 most recent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "The number of downloads to skip",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of downloads to retrieve",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DownloadObject"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/hello": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Returns user's name & slug, or HTML if an accept header of \"text/html\" is sent instead",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Name": {
                                    "description": "The user's name",
                                    "type": "string"
                                },
                                "Slug": {
                                    "description": "The slug of the user's account",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Company"
                ],
                "summary": "Returns user's name & slug, or HTML if an accept header of \"text/html\" is sent instead",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Name": {
                                    "description": "The user's name",
                                    "type": "string"
                                },
                                "Slug": {
                                    "description": "The slug of the user's account slug",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Returns user's name & slug, or HTML if an accept header of \"text/html\" is sent instead",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Name": {
                                    "description": "The user's name",
                                    "type": "string"
                                },
                                "Slug": {
                                    "description": "The slug of the user's account slug",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Company"
                ],
                "summary": "Returns user's name & slug, or HTML if an accept header of \"text/html\" is sent instead",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Name": {
                                    "description": "The user's name",
                                    "type": "string"
                                },
                                "Slug": {
                                    "description": "The slug of the user's account slug",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/session": {
            "get": {
                "tags": [
                    "Session"
                ],
                "summary": "Return type 1 (website) sessions for an account in the specified time period",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "TimeFrom",
                        "in": "query",
                        "description": "Timestamp to search from",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "TimeTo",
                        "in": "query",
                        "description": "Timestamp to search to",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Number of results to skip",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number to limit the results to",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "current_page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Limit": {
                                    "type": "number"
                                },
                                "Skip": {
                                    "type": "number"
                                },
                                "Count": {
                                    "type": "number"
                                },
                                "Records": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "SessionId": {
                                                "type": "string"
                                            },
                                            "ContactId": {
                                                "type": "string"
                                            },
                                            "TimeCreated": {
                                                "type": "number"
                                            },
                                            "IPAddress": {
                                                "type": "string"
                                            },
                                            "UserAgent": {
                                                "type": "string"
                                            },
                                            "ContactURL": {
                                                "type": "string"
                                            },
                                            "PrimaryCompanyName": {
                                                "type": "string"
                                            },
                                            "PrimaryCompanyHost": {
                                                "type": "string"
                                            },
                                            "PrimaryCompanyScore": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Must have TimeFrom & TimeTo, and range must not exceed 7 days"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/summary": {
            "get": {
                "tags": [
                    "Summary"
                ],
                "summary": "Returns a nightly summary for a given user & Date",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Date",
                        "in": "query",
                        "description": "Date in ISO 8601 format (YYYY-MM-DD)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "EmailAddress",
                        "in": "query",
                        "description": "User to get the summary for",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Client": {
                                    "type": "string"
                                },
                                "AccountName": {
                                    "type": "string"
                                },
                                "TimeCreated": {
                                    "type": "number"
                                },
                                "EmailAddress": {
                                    "type": "string"
                                },
                                "AccountSlug": {
                                    "type": "string"
                                },
                                "Streams": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "StreamId": {
                                                "type": "string"
                                            },
                                            "Sort": {
                                                "type": "string"
                                            },
                                            "URL": {
                                                "type": "string"
                                            },
                                            "TotalEver": {
                                                "type": "number"
                                            },
                                            "TotalNewLast24Hours": {
                                                "type": "number"
                                            },
                                            "TotalActiveLast24Hours": {
                                                "type": "number"
                                            },
                                            "Contacts": {
                                                "description": "Can have many keys of ContactIDs, each containing a contact object",
                                                "properties": {
                                                    "ContactID": {
                                                        "description": "A cut down contact object, that only contains what's needed for the summary",
                                                        "properties": {
                                                            "Visits": {
                                                                "type": "number"
                                                            },
                                                            "TotalActivities": {
                                                                "type": "number"
                                                            },
                                                            "Name": {
                                                                "type": "string"
                                                            },
                                                            "Image": {
                                                                "type": "string"
                                                            },
                                                            "Company": {
                                                                "type": "string"
                                                            },
                                                            "CompanyHost": {
                                                                "type": "string"
                                                            },
                                                            "CompanyIndustry": {
                                                                "type": "string"
                                                            },
                                                            "CompanyDescription": {
                                                                "type": "string"
                                                            },
                                                            "Email": {
                                                                "type": "string"
                                                            },
                                                            "Phone": {
                                                                "type": "string"
                                                            },
                                                            "Location": {
                                                                "type": "string"
                                                            },
                                                            "Social": {
                                                                "properties": {
                                                                    "Facebook": {
                                                                        "type": "string"
                                                                    },
                                                                    "Twitter": {
                                                                        "type": "string"
                                                                    },
                                                                    "LinkedIn": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "TotalDuration": {
                                                                "type": "number"
                                                            },
                                                            "TimeLastActive": {
                                                                "type": "number"
                                                            },
                                                            "URL": {
                                                                "type": "string"
                                                            },
                                                            "isNew": {
                                                                "type": "boolean"
                                                            },
                                                            "isPersonal": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "Title": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Must Have Timestamp & EmailAddress, and must return a summary"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/trigger/{TriggerId}": {
            "get": {
                "tags": [
                    "Triggers"
                ],
                "summary": "Returns a single trigger",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trigger_param_trigger-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Trigger"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Must Have Timestamp & EmailAddress, and must return a summary"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Triggers"
                ],
                "summary": "Deletes a trigger",
                "description": "\nif the user is a regular user AND if the trigger ONLY belongs to that user then the trigger is deleted\nif the user is a regular user AND the trigger belongs to the System user then the user is added to the blacklist\nif the user is a regular user AND the trigger doesn't belong to System OR user then HTTP:400\n\nif the user is an admin and the trigger belongs to a user then trigger is deleted\nif the user is an admin and the trigger belongs to System then the admin is added to blacklist\n           ",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trigger_param_trigger-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Trigger"
                        }
                    },
                    "204": {
                        "description": "Trigger has been fully deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Must Have Timestamp & EmailAddress, and must return a summary"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/trigger": {
            "get": {
                "tags": [
                    "Triggers"
                ],
                "summary": "Returns all triggers on this stream",
                "description": "\nIF the user is a user level user then this returns **just** their streams\nIF the user is an admin level user then they can use the filter paramter\n           ",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "types",
                        "in": "query",
                        "description": "Any number of [CrmSet, Callback, ChangeTag, Notify, NotifyHipchat, Summary] in a comma separated list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Either all, or a comma separated list of email addresses (Can only be used by admins)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "current_page",
                        "in": "query",
                        "description": "The page number, can be provided instead of the skip",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/global_param_skip"
                    },
                    {
                        "$ref": "#/parameters/global_param_limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Limit": {
                                    "type": "number"
                                },
                                "Skip": {
                                    "type": "number"
                                },
                                "Count": {
                                    "type": "number"
                                },
                                "Records": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Trigger"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Must Have Timestamp & EmailAddress, and must return a summary"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Triggers"
                ],
                "summary": "Updates a trigger",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Body",
                        "in": "body",
                        "description": "The request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Trigger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Trigger"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "A non admin musn't be trying to update someone else's trigger"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "Creates a trigger",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Body",
                        "in": "body",
                        "description": "The request body, shouldn't contain TriggerId",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Trigger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Trigger"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Musn't have a TriggerId, and a non admin musn't be trying to create a trigger for someone else"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/trigger/{TriggerId}/test": {
            "post": {
                "tags": [
                    "Triggers"
                ],
                "summary": "Tries to action the Trigger",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trigger_param_trigger-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Status": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Must have trigger ID, and there must be contacts in the stream"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/widget/{WidgetId}/fields/{FieldId}": {
            "get": {
                "tags": [
                    "Widgets"
                ],
                "summary": "Gets field values for an account widget",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/widget_param_widget-id"
                    },
                    {
                        "$ref": "#/parameters/widget_param_field-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WidgetField"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Must have field & widget IDs"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/widget/{WidgetId}/partial/{FieldId}/value/{PartialData}": {
            "get": {
                "tags": [
                    "Widgets"
                ],
                "summary": "Gets field values for an account widget",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/widget_param_widget-id"
                    },
                    {
                        "$ref": "#/parameters/widget_param_field-id"
                    },
                    {
                        "name": "PartialData",
                        "in": "path",
                        "description": "Partial Data, can be used to 'filter' results to only those that contain it",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WidgetField"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Must have field & widget IDs"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/module/capturenew/{id}": {
            "get": {
                "tags": [
                    "CaptureNew"
                ],
                "summary": "Fetches a capture model given a specific ID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/module_capturenew_param_capture-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CaptureModel"
                        }
                    },
                    "400": {
                        "description": "Capture by that ID not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CaptureNew"
                ],
                "summary": "Updates a capture with the given ID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/module_capturenew_param_capture-id"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "description": "The request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CaptureModel"
                        },
                        "type": "object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CaptureModel"
                        }
                    },
                    "400": {
                        "description": "Capture by that ID not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/module/capturenew/": {
            "get": {
                "tags": [
                    "CaptureNew"
                ],
                "summary": "Fetches all capture models on the account (paged)",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/global_param_skip"
                    },
                    {
                        "$ref": "#/parameters/global_param_limit"
                    },
                    {
                        "parameter": "module_capturenew_param_current_page",
                        "name": "current_page",
                        "in": "query",
                        "description": "Alternative to skip - specify page number instead of exact number of results to skip",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Limit": {
                                    "type": "number"
                                },
                                "Skip": {
                                    "type": "number"
                                },
                                "Count": {
                                    "type": "number"
                                },
                                "Records": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CaptureModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CaptureNew"
                ],
                "summary": "Creates a brand new capture model",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Body",
                        "in": "body",
                        "description": "The capture model (no ID needed to be included)",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CaptureModel"
                        },
                        "type": "object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CaptureModel"
                        }
                    },
                    "400": {
                        "description": "Capture by that ID not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/module/crm/{EmailAddress}/getcontact/": {
            "get": {
                "tags": [
                    "CRM"
                ],
                "summary": "Outputs a contact in a format appropiate for the Salesforce Application",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/module_crm_param_email-address"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "Company": {
                                    "properties": {
                                        "Company": {
                                            "type": "string"
                                        },
                                        "Line1": {
                                            "type": "string"
                                        },
                                        "Line2": {
                                            "type": "string"
                                        },
                                        "City": {
                                            "type": "string"
                                        },
                                        "PostalCode": {
                                            "type": "string"
                                        },
                                        "Logo": {
                                            "type": "string"
                                        },
                                        "Phone": {
                                            "type": "string"
                                        },
                                        "Website": {
                                            "type": "string"
                                        },
                                        "Industry": {
                                            "type": "string"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "SocialMedia": {
                                            "description": "An object that CAN include Facebook, LinkedIn and/or Twitter",
                                            "properties": {
                                                "Facebook": {
                                                    "type": "string"
                                                },
                                                "LinkedIn": {
                                                    "type": "string"
                                                },
                                                "Twitter": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Contact": {
                                    "properties": {
                                        "Address": {
                                            "properties": {
                                                "bHidden": {
                                                    "type": "boolean"
                                                },
                                                "bManual": {
                                                    "type": "boolean"
                                                },
                                                "QualityScore": {
                                                    "type": "integer"
                                                },
                                                "Line1": {
                                                    "type": "string"
                                                },
                                                "Line2": {
                                                    "type": "string"
                                                },
                                                "City": {
                                                    "type": "string"
                                                },
                                                "PostCode": {
                                                    "type": "string"
                                                },
                                                "cwId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "Email": {
                                            "type": "string"
                                        },
                                        "Image": {
                                            "type": "string"
                                        },
                                        "Phone": {
                                            "type": "string"
                                        },
                                        "TimeCreated": {
                                            "type": "integer"
                                        },
                                        "TotalDuration": {
                                            "type": "integer"
                                        },
                                        "CountSessions": {
                                            "type": "integer"
                                        },
                                        "LastSession": {
                                            "type": "integer"
                                        },
                                        "Tags": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "Name": {
                                                        "type": "string"
                                                    },
                                                    "Order": {
                                                        "type": "integer"
                                                    },
                                                    "Colour": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "Downloads": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "DateCreated": {
                                                        "type": "string"
                                                    },
                                                    "URL": {
                                                        "type": "string"
                                                    },
                                                    "Filename": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "SocialMedia": {
                                            "description": "An object that CAN include Facebook, LinkedIn and/or Twitter",
                                            "properties": {
                                                "Facebook": {
                                                    "type": "string"
                                                },
                                                "LinkedIn": {
                                                    "type": "string"
                                                },
                                                "Twitter": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ContactId": {
                                    "type": "string"
                                },
                                "Sessions": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "Activities": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "Actions": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "_id": {
                                                            "description": "Session goal ID",
                                                            "type": "string"
                                                        },
                                                        "SessionGUID": {
                                                            "description": "Session ID",
                                                            "type": "string"
                                                        },
                                                        "Duration": {
                                                            "description": "Duration of session goal",
                                                            "type": "integer"
                                                        },
                                                        "GoalTitle": {
                                                            "type": "string"
                                                        },
                                                        "GoalType": {
                                                            "type": "string"
                                                        },
                                                        "SessionGoalTypeId": {
                                                            "type": "integer"
                                                        },
                                                        "TimeCreated": {
                                                            "description": "Time of the session goal",
                                                            "type": "integer"
                                                        },
                                                        "RawURL": {
                                                            "description": "The URL relevant to the session goal",
                                                            "type": "string"
                                                        },
                                                        "rawPostArray": {
                                                            "description": "Data from the session goal, will be an object with various fields or an empty array",
                                                            "type": "object"
                                                        },
                                                        "Referrer": {
                                                            "description": "OPTIONAL - not guaranteed to be there",
                                                            "properties": {
                                                                "_id": {
                                                                    "type": "string"
                                                                },
                                                                "Url": {
                                                                    "type": "string"
                                                                },
                                                                "ReferrerType": {
                                                                    "type": "string"
                                                                },
                                                                "ReferrerSubType": {
                                                                    "type": "string"
                                                                },
                                                                "Queries": {
                                                                    "description": "Will be an array if empty",
                                                                    "properties": {
                                                                        "Medium": {
                                                                            "type": "string"
                                                                        },
                                                                        "Campaign": {
                                                                            "type": "string"
                                                                        },
                                                                        "Source": {
                                                                            "type": "string"
                                                                        },
                                                                        "Term": {
                                                                            "type": "string"
                                                                        },
                                                                        "Content": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                }
                                            },
                                            "Actions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "SessionGUID": {
                                                "type": "string"
                                            },
                                            "SessionType": {
                                                "properties": {
                                                    "Id": {
                                                        "type": "integer"
                                                    },
                                                    "Type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "TimeCreated": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Missing parameter strEmailAddress"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/module/gdpr/settings/blocked/{id}": {
            "delete": {
                "tags": [
                    "GDPR"
                ],
                "summary": "Unblocks data that has been blocked on the account",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/module_gdpr_param_blocked-data"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Ok - no content"
                    },
                    "400": {
                        "description": "BadRequest: Missing data"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/module/gdpr/settings/blocked": {
            "get": {
                "tags": [
                    "GDPR"
                ],
                "summary": "Provides blocked data from the account",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/global_param_skip"
                    },
                    {
                        "$ref": "#/parameters/global_param_limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "properties": {
                                    "_id": {
                                        "description": "The unique data blocked by the user",
                                        "type": "string"
                                    },
                                    "TimeCreated": {
                                        "type": "integer"
                                    },
                                    "UserEmail": {
                                        "description": "The email of the user who blocked the data",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        },
        "/module/gdpr/retention/settings": {
            "get": {
                "tags": [
                    "GDPR"
                ],
                "summary": "Returns GDPR Retention Settings for the account",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "IpAnonymise": {
                                    "type": "boolean"
                                },
                                "MonthsIP": {
                                    "type": "number"
                                },
                                "MonthsCookie": {
                                    "type": "number"
                                },
                                "MonthsAll": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GDPR"
                ],
                "summary": "Updates GDPR Retention Settings for the account",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Body",
                        "in": "body",
                        "description": "The request body",
                        "required": true,
                        "schema": {
                            "properties": {
                                "IpAnonymise": {
                                    "type": "boolean"
                                },
                                "MonthsIP": {
                                    "type": "number"
                                },
                                "MonthsCookie": {
                                    "type": "number"
                                },
                                "MonthsAll": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "type": "object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "IpAnonymise": {
                                    "type": "boolean"
                                },
                                "MonthsIP": {
                                    "type": "number"
                                },
                                "MonthsCookie": {
                                    "type": "number"
                                },
                                "MonthsAll": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "canddi_key": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "Activity": {
            "description": "An activity",
            "properties": {
                "Actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "_id": {
                    "description": "Session goal ID",
                    "type": "string"
                },
                "SessionGUID": {
                    "description": "Session ID",
                    "type": "string"
                },
                "Duration": {
                    "description": "Duration of session goal",
                    "type": "integer"
                },
                "GoalTitle": {
                    "type": "string"
                },
                "GoalType": {
                    "type": "string"
                },
                "SessionGoalTypeId": {
                    "type": "integer"
                },
                "TimeCreated": {
                    "description": "Time of the session goal",
                    "type": "integer"
                },
                "RawURL": {
                    "description": "The URL relevant to the session goal",
                    "type": "string"
                },
                "rawPostArray": {
                    "description": "Data from the session goal, will be an object with various fields or an empty array",
                    "type": "object"
                },
                "Referrer": {
                    "description": "OPTIONAL - not guaranteed to be there",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "Url": {
                            "type": "string"
                        },
                        "ReferrerType": {
                            "type": "string"
                        },
                        "ReferrerSubType": {
                            "type": "string"
                        },
                        "Queries": {
                            "description": "Will be an array if empty",
                            "properties": {
                                "Medium": {
                                    "type": "string"
                                },
                                "Campaign": {
                                    "type": "string"
                                },
                                "Source": {
                                    "type": "string"
                                },
                                "Term": {
                                    "type": "string"
                                },
                                "Content": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            }
        },
        "Company": {
            "description": "A Company, child of Contact model",
            "properties": {
                "bHidden": {
                    "type": "boolean"
                },
                "bManual": {
                    "type": "boolean"
                },
                "QualityScore": {
                    "type": "integer"
                },
                "Company": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Facebook": {
                    "type": "string"
                },
                "Twitter": {
                    "type": "string"
                },
                "LinkedIn": {
                    "type": "string"
                },
                "Logo": {
                    "type": "string"
                },
                "Industry": {
                    "type": "string"
                },
                "Website": {
                    "type": "string"
                },
                "PhoneNumbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "EmailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Line1": {
                    "type": "string"
                },
                "Line2": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "PostalCode": {
                    "type": "string"
                },
                "cwId": {
                    "type": "string"
                },
                "IndustrySector": {
                    "type": "string"
                },
                "IndustryGroup": {
                    "type": "string"
                },
                "IndustrySIC": {
                    "type": "string"
                },
                "IndustryNAICS": {
                    "type": "string"
                },
                "Tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "AlexaRank": {
                    "type": "integer"
                },
                "Employees": {
                    "type": "integer"
                },
                "EmployeeRange": {
                    "type": "string"
                },
                "MarketCap": {
                    "type": "string"
                },
                "Raised": {
                    "type": "integer"
                },
                "Revenue": {
                    "type": "string"
                },
                "RevenueEstimated": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Address": {
            "description": "An Address, child of Contact model",
            "properties": {
                "bHidden": {
                    "type": "boolean"
                },
                "bManual": {
                    "type": "boolean"
                },
                "QualityScore": {
                    "type": "number"
                },
                "Line1": {
                    "type": "string"
                },
                "Line2": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "Postcode": {
                    "type": "string"
                },
                "cwId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Name": {
            "description": "A Name, child of Contact model",
            "properties": {
                "bHidden": {
                    "type": "boolean"
                },
                "bManual": {
                    "type": "boolean"
                },
                "QualityScore": {
                    "type": "integer"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "cwId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Phone": {
            "description": "A Phone Number, child of Contact model",
            "properties": {
                "bHidden": {
                    "type": "boolean"
                },
                "bManual": {
                    "type": "boolean"
                },
                "QualityScore": {
                    "type": "integer"
                },
                "Phone": {
                    "type": "string"
                },
                "cwId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Email": {
            "description": "An EmailAddress, child of Contact model",
            "properties": {
                "bHidden": {
                    "type": "boolean"
                },
                "bManual": {
                    "type": "boolean"
                },
                "QualityScore": {
                    "type": "number"
                },
                "Email": {
                    "type": "string"
                },
                "cwId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Contact": {
            "description": "A contact",
            "properties": {
                "InStreams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "LeadGrade": {
                    "type": "string"
                },
                "LeadGradeInt": {
                    "type": "number"
                },
                "LeadScore": {
                    "type": "number"
                },
                "Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Address"
                    }
                },
                "AddressesCount": {
                    "type": "number"
                },
                "AssignedTo": {
                    "description": "Email Address of the person the contact is assigned to",
                    "type": "string"
                },
                "ContactId": {
                    "type": "string"
                },
                "Comments": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "cwId": {
                                "type": "string"
                            },
                            "Message": {
                                "type": "string"
                            },
                            "EmailAddress": {
                                "type": "string"
                            },
                            "TimeCreated": {
                                "type": "number"
                            }
                        }
                    }
                },
                "Companies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Company"
                    }
                },
                "CompaniesCount": {
                    "type": "number"
                },
                "Emails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Email"
                    }
                },
                "EmailsCount": {
                    "type": "integer"
                },
                "Images": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "ImageURL": {
                                "type": "string"
                            },
                            "cwId": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "Names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Name"
                    }
                },
                "NamesCount": {
                    "type": "number"
                },
                "Phones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Phone"
                    }
                },
                "PhonesCount": {
                    "type": "number"
                },
                "SocialMedia": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "NetworkIcon": {
                                "type": "string"
                            },
                            "NetworkName": {
                                "type": "string"
                            },
                            "ProfileURL": {
                                "type": "string"
                            },
                            "cwId": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "Status": {
                    "type": "integer"
                },
                "Locations": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "lat": {
                                "description": "Latitude",
                                "type": "number"
                            },
                            "lon": {
                                "description": "Longitude",
                                "type": "number"
                            },
                            "TimeCreated": {
                                "type": "number"
                            },
                            "Type": {
                                "type": "number"
                            }
                        }
                    }
                },
                "Widgets": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "AccountWidget": {
                                "type": "string"
                            },
                            "ContactWidgets": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "cwId": {
                                            "type": "string"
                                        },
                                        "Data": {
                                            "description": "Data from the widget, could have a variety of fields",
                                            "type": "object"
                                        },
                                        "TimeCreated": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "DownloadObject": {
            "description": "A download",
            "properties": {
                "DownloadId": {
                    "type": "string"
                },
                "DownloadURL": {
                    "type": "string"
                },
                "StatusId": {
                    "description": "-1 = error, 1 = waiting, 2 = processing & 3 = done",
                    "type": "integer"
                },
                "StatusText": {
                    "description": "The error if there is one, otherwise it'll be waiting/processing or empty",
                    "type": "string"
                },
                "TimeCreated": {
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                }
            }
        },
        "Trigger": {
            "properties": {
                "Blacklist": {
                    "type": "array",
                    "items": {
                        "description": "Email address of blacklisted user",
                        "type": "string"
                    }
                },
                "Settings": {
                    "description": "Example is for Summary, contents depend on type of trigger",
                    "properties": {
                        "Filter": {
                            "type": "string"
                        },
                        "Sort": {
                            "type": "string"
                        },
                        "StreamTotal": {
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "StreamId": {
                    "type": "string"
                },
                "TimeCreated": {
                    "type": "number"
                },
                "TriggerId": {
                    "type": "string"
                },
                "TriggerType": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                },
                "Owner": {
                    "type": "boolean"
                },
                "Title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WidgetField": {
            "properties": {
                "Id": {
                    "type": "string"
                },
                "DisplayId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CaptureModel": {
            "description": "A capture model",
            "properties": {
                "id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "Active": {
                    "type": "boolean"
                },
                "Order": {
                    "type": "number"
                },
                "Timecreated": {
                    "type": "number"
                },
                "Views": {
                    "type": "number"
                },
                "Hits": {
                    "type": "number"
                },
                "Fields": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "required": {
                                "type": "boolean"
                            },
                            "type": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            },
                            "label": {
                                "type": "string"
                            }
                        }
                    }
                },
                "Success": {
                    "properties": {
                        "action": {
                            "type": "string"
                        },
                        "actionDelay": {
                            "type": "number"
                        },
                        "description": {
                            "type": "string"
                        },
                        "label": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Appearance": {
                    "properties": {
                        "Layout": {
                            "type": "string"
                        },
                        "Animation": {
                            "type": "string"
                        },
                        "Background": {
                            "type": "string"
                        },
                        "HeaderText": {
                            "type": "string"
                        },
                        "Text": {
                            "type": "string"
                        },
                        "Button": {
                            "type": "string"
                        },
                        "ButtonText": {
                            "type": "string"
                        },
                        "BarBackground": {
                            "type": "string"
                        },
                        "BarText": {
                            "type": "string"
                        },
                        "BarButton": {
                            "type": "string"
                        },
                        "BarButtonText": {
                            "type": "string"
                        },
                        "MobileAlign": {
                            "type": "string"
                        },
                        "MobileBottom": {
                            "type": "boolean"
                        },
                        "PushBody": {
                            "type": "boolean"
                        },
                        "ScrollWithBody": {
                            "type": "boolean"
                        },
                        "Font": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Behaviour": {
                    "properties": {
                        "ShowTimes": {
                            "type": "number"
                        },
                        "StopOnAction": {
                            "type": "boolean"
                        },
                        "Weekdays": {
                            "description": "Array of weekdays in integer format (0-6)",
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    "type": "object"
                },
                "Content": {
                    "properties": {
                        "ButtonText": {
                            "type": "string"
                        },
                        "Note": {
                            "type": "string"
                        },
                        "Title": {
                            "type": "string"
                        },
                        "BarTitle": {
                            "type": "string"
                        },
                        "BarButtonText": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Targeting": {
                    "properties": {
                        "URLFilters": {
                            "type": "array",
                            "items": {
                                "properties": {
                                    "include": {
                                        "type": "boolean"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "type": "object"
                }
            }
        }
    },
    "parameters": {
        "global_param_skip": {
            "name": "skip",
            "in": "query",
            "description": "Number of results to skip",
            "required": false,
            "type": "integer"
        },
        "global_param_limit": {
            "name": "limit",
            "in": "query",
            "description": "Number to limit the results to",
            "required": false,
            "type": "integer"
        },
        "activity_param_session-goal-id": {
            "name": "SessionGoalId",
            "in": "path",
            "description": "A session goal id",
            "required": true,
            "type": "string"
        },
        "contact_param_contact-ids": {
            "name": "ContactIds",
            "in": "path",
            "description": "Comma separated list of contact IDs",
            "required": true,
            "type": "string"
        },
        "contact_param_contact-id": {
            "name": "ContactId",
            "in": "path",
            "description": "A single contact ID",
            "required": true,
            "type": "string"
        },
        "contact_param_child-type": {
            "name": "ChildType",
            "in": "path",
            "description": "A child type, should be one of: addresses, companies, emails, names, phones",
            "required": true,
            "type": "string"
        },
        "download_param_download-id": {
            "name": "DownloadId",
            "in": "path",
            "description": "A download's id",
            "required": true,
            "type": "string"
        },
        "trigger_param_trigger-id": {
            "name": "TriggerId",
            "in": "path",
            "description": "A trigger ID",
            "required": true,
            "type": "string"
        },
        "widget_param_widget-id": {
            "name": "WidgetId",
            "in": "path",
            "description": "A widget ID",
            "required": true,
            "type": "string"
        },
        "widget_param_field-id": {
            "name": "FieldId",
            "in": "path",
            "description": "A field ID",
            "required": true,
            "type": "string"
        },
        "module_capturenew_param_capture-id": {
            "name": "id",
            "in": "path",
            "description": "Capture ID",
            "required": true,
            "type": "string"
        },
        "module_gdpr_param_skip": {
            "name": "Skip",
            "in": "query",
            "description": "Number of results to skip",
            "required": false,
            "type": "integer"
        },
        "module_gdpr_param_limit": {
            "name": "Limit",
            "in": "query",
            "description": "Number to limit the results to",
            "required": false,
            "type": "integer"
        },
        "module_crm_param_email-address": {
            "name": "EmailAddress",
            "in": "path",
            "description": "An email address",
            "required": true,
            "type": "string"
        },
        "module_gdpr_param_blocked-data": {
            "name": "id",
            "in": "path",
            "description": "Data to unblock",
            "required": true,
            "type": "string"
        }
    },
    "responses": {
        "global_401_error": {
            "description": "Unauthorized"
        }
    },
    "securityDefinitions": {
        "canddi_key": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}